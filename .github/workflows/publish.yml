name: Build & Publish Docker Image

env:
  SERVICE_NAME: acs-auth

# ! Change this back to released
#on:
#  release:
#    types: [ published ]
on:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/prepare
        id: prepare
        with:
          service-name: ${{ env.SERVICE_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

#      - uses: actions/checkout@v3
#
#      # Install the cosign tool except on PR
#      # https://github.com/sigstore/cosign-installer
#      - name: Install cosign
#        uses: sigstore/cosign-installer@v3.3.0
#
#      # Workaround: https://github.com/docker/build-push-action/issues/461
#      - name: Setup Docker buildx
#        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
#
#      # Login against a Docker registry
#      # https://github.com/docker/login-action
#      - name: Log into registry ${{ env.REGISTRY }}
#        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      # Extract metadata (tags, labels) for Docker
#      # https://github.com/docker/metadata-action
#      - name: Extract Docker metadata
#        id: meta
#        uses: docker/metadata-action@v5
#        with:
#          images: ${{ env.IMAGE_BASE }}

      - uses: docker/build-push-action@v5
        id: build-and-push
        with:
          context: ./${{ env.SERVICE_NAME }}
          push: true
          tags: ghcr.io/amrc-factoryplus/${{ env.SERVICE_NAME }}:${{ steps.prepare.outputs.meta.version }}
          labels: ${{  steps.prepare.outputs.meta.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - uses: ./.github/actions/cleanup
        id: cleanup
        with:
          meta: ${{ steps.prepare.outputs.meta }}
          service-name: ${{ env.SERVICE_NAME }}
          digest: ${{ steps.build-and-push.outputs.digest }}

#      # Sign the resulting Docker image digest except on PRs.
#      # This will only write to the public Rekor transparency log when the Docker
#      # repository is public to avoid leaking data.  If you would like to publish
#      # transparency data even for private images, pass --force to cosign below.
#      # https://github.com/sigstore/cosign
#      - name: Sign the published Docker image
#        env:
#          COSIGN_EXPERIMENTAL: "true"
#        # This step uses the identity token to provision an ephemeral certificate
#        # against the sigstore community Fulcio instance.
#        run: echo "${{ env.IMAGE_BASE }}:${{ steps.meta.outputs.version }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push.outputs.digest }}
