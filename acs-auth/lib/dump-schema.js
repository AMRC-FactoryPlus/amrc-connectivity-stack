"use strict";export const dump_schema = validate10;const schema11 = {"type":"object","required":["service","version"],"properties":{"service":{"const":"cab2642a-f7d9-42e5-8845-8f35affe1fd4"},"version":{"type":"integer"}},"oneOf":[{"type":"object","required":["version"],"additionalProperties":false,"properties":{"service":true,"version":{"const":2},"identities":{"type":"object","propertyNames":{"format":"uuid"},"additionalProperties":{"type":"object","additionalProperties":false,"properties":{"kerberos":{"type":"string"}}}},"grants":{"type":"object","propertyNames":{"format":"uuid"},"additionalProperties":{"type":"object","propertyNames":{"format":"uuid"},"additionalProperties":{"oneOf":[{"type":"null"},{"type":"object","propertyNames":{"format":"uuid"},"additionalProperties":{"type":"boolean"}}]}}}}}],"$id":"dump_schema"};const formats0 = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="dump_schema" */;let vErrors = null;let errors = 0;const _errs1 = errors;let valid0 = false;let passing0 = null;const _errs2 = errors;if(errors === _errs2){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.version === undefined) && (missing0 = "version")){const err0 = {instancePath,schemaPath:"#/oneOf/0/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}else {const _errs4 = errors;for(const key0 in data){if(!((((key0 === "service") || (key0 === "version")) || (key0 === "identities")) || (key0 === "grants"))){const err1 = {instancePath,schemaPath:"#/oneOf/0/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;break;}}if(_errs4 === errors){if(data.version !== undefined){const _errs5 = errors;if(2 !== data.version){const err2 = {instancePath:instancePath+"/version",schemaPath:"#/oneOf/0/properties/version/const",keyword:"const",params:{allowedValue: 2},message:"must be equal to constant"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}var valid1 = _errs5 === errors;}else {var valid1 = true;}if(valid1){if(data.identities !== undefined){let data1 = data.identities;const _errs6 = errors;if(errors === _errs6){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){for(const key1 in data1){const _errs8 = errors;if(errors === _errs8){if(typeof key1 === "string"){if(!(formats0.test(key1))){const err3 = {instancePath:instancePath+"/identities",schemaPath:"#/oneOf/0/properties/identities/propertyNames/format",keyword:"format",params:{format: "uuid"},message:"must match format \""+"uuid"+"\"",propertyName:key1};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}}}var valid2 = _errs8 === errors;if(!valid2){const err4 = {instancePath:instancePath+"/identities",schemaPath:"#/oneOf/0/properties/identities/propertyNames",keyword:"propertyNames",params:{propertyName: key1},message:"property name must be valid"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;break;}}if(valid2){for(const key2 in data1){let data2 = data1[key2];const _errs10 = errors;if(errors === _errs10){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){const _errs12 = errors;for(const key3 in data2){if(!(key3 === "kerberos")){const err5 = {instancePath:instancePath+"/identities/" + key2.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/identities/additionalProperties/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;break;}}if(_errs12 === errors){if(data2.kerberos !== undefined){if(typeof data2.kerberos !== "string"){const err6 = {instancePath:instancePath+"/identities/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/kerberos",schemaPath:"#/oneOf/0/properties/identities/additionalProperties/properties/kerberos/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}}}}else {const err7 = {instancePath:instancePath+"/identities/" + key2.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/identities/additionalProperties/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}var valid3 = _errs10 === errors;if(!valid3){break;}}}}else {const err8 = {instancePath:instancePath+"/identities",schemaPath:"#/oneOf/0/properties/identities/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}}var valid1 = _errs6 === errors;}else {var valid1 = true;}if(valid1){if(data.grants !== undefined){let data4 = data.grants;const _errs15 = errors;if(errors === _errs15){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){for(const key4 in data4){const _errs17 = errors;if(errors === _errs17){if(typeof key4 === "string"){if(!(formats0.test(key4))){const err9 = {instancePath:instancePath+"/grants",schemaPath:"#/oneOf/0/properties/grants/propertyNames/format",keyword:"format",params:{format: "uuid"},message:"must match format \""+"uuid"+"\"",propertyName:key4};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}}var valid5 = _errs17 === errors;if(!valid5){const err10 = {instancePath:instancePath+"/grants",schemaPath:"#/oneOf/0/properties/grants/propertyNames",keyword:"propertyNames",params:{propertyName: key4},message:"property name must be valid"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;break;}}if(valid5){for(const key5 in data4){let data5 = data4[key5];const _errs19 = errors;if(errors === _errs19){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){for(const key6 in data5){const _errs21 = errors;if(errors === _errs21){if(typeof key6 === "string"){if(!(formats0.test(key6))){const err11 = {instancePath:instancePath+"/grants/" + key5.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/grants/additionalProperties/propertyNames/format",keyword:"format",params:{format: "uuid"},message:"must match format \""+"uuid"+"\"",propertyName:key6};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}}var valid7 = _errs21 === errors;if(!valid7){const err12 = {instancePath:instancePath+"/grants/" + key5.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/grants/additionalProperties/propertyNames",keyword:"propertyNames",params:{propertyName: key6},message:"property name must be valid"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;break;}}if(valid7){for(const key7 in data5){let data6 = data5[key7];const _errs23 = errors;const _errs24 = errors;let valid9 = false;let passing1 = null;const _errs25 = errors;if(data6 !== null){const err13 = {instancePath:instancePath+"/grants/" + key5.replace(/~/g, "~0").replace(/\//g, "~1")+"/" + key7.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/grants/additionalProperties/additionalProperties/oneOf/0/type",keyword:"type",params:{type: "null"},message:"must be null"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}var _valid1 = _errs25 === errors;if(_valid1){valid9 = true;passing1 = 0;}const _errs27 = errors;if(errors === _errs27){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){for(const key8 in data6){const _errs29 = errors;if(errors === _errs29){if(typeof key8 === "string"){if(!(formats0.test(key8))){const err14 = {instancePath:instancePath+"/grants/" + key5.replace(/~/g, "~0").replace(/\//g, "~1")+"/" + key7.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/grants/additionalProperties/additionalProperties/oneOf/1/propertyNames/format",keyword:"format",params:{format: "uuid"},message:"must match format \""+"uuid"+"\"",propertyName:key8};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}}var valid10 = _errs29 === errors;if(!valid10){const err15 = {instancePath:instancePath+"/grants/" + key5.replace(/~/g, "~0").replace(/\//g, "~1")+"/" + key7.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/grants/additionalProperties/additionalProperties/oneOf/1/propertyNames",keyword:"propertyNames",params:{propertyName: key8},message:"property name must be valid"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;break;}}if(valid10){for(const key9 in data6){const _errs31 = errors;if(typeof data6[key9] !== "boolean"){const err16 = {instancePath:instancePath+"/grants/" + key5.replace(/~/g, "~0").replace(/\//g, "~1")+"/" + key7.replace(/~/g, "~0").replace(/\//g, "~1")+"/" + key9.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/grants/additionalProperties/additionalProperties/oneOf/1/additionalProperties/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}var valid11 = _errs31 === errors;if(!valid11){break;}}}}else {const err17 = {instancePath:instancePath+"/grants/" + key5.replace(/~/g, "~0").replace(/\//g, "~1")+"/" + key7.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/grants/additionalProperties/additionalProperties/oneOf/1/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}}var _valid1 = _errs27 === errors;if(_valid1 && valid9){valid9 = false;passing1 = [passing1, 1];}else {if(_valid1){valid9 = true;passing1 = 1;}}if(!valid9){const err18 = {instancePath:instancePath+"/grants/" + key5.replace(/~/g, "~0").replace(/\//g, "~1")+"/" + key7.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/grants/additionalProperties/additionalProperties/oneOf",keyword:"oneOf",params:{passingSchemas: passing1},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}else {errors = _errs24;if(vErrors !== null){if(_errs24){vErrors.length = _errs24;}else {vErrors = null;}}}var valid8 = _errs23 === errors;if(!valid8){break;}}}}else {const err19 = {instancePath:instancePath+"/grants/" + key5.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/oneOf/0/properties/grants/additionalProperties/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}var valid6 = _errs19 === errors;if(!valid6){break;}}}}else {const err20 = {instancePath:instancePath+"/grants",schemaPath:"#/oneOf/0/properties/grants/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}}var valid1 = _errs15 === errors;}else {var valid1 = true;}}}}}}else {const err21 = {instancePath,schemaPath:"#/oneOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}var _valid0 = _errs2 === errors;if(_valid0){valid0 = true;passing0 = 0;}if(!valid0){const err22 = {instancePath,schemaPath:"#/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;validate10.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing1;if(((data.service === undefined) && (missing1 = "service")) || ((data.version === undefined) && (missing1 = "version"))){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data.service !== undefined){const _errs33 = errors;if("cab2642a-f7d9-42e5-8845-8f35affe1fd4" !== data.service){validate10.errors = [{instancePath:instancePath+"/service",schemaPath:"#/properties/service/const",keyword:"const",params:{allowedValue: "cab2642a-f7d9-42e5-8845-8f35affe1fd4"},message:"must be equal to constant"}];return false;}var valid12 = _errs33 === errors;}else {var valid12 = true;}if(valid12){if(data.version !== undefined){let data9 = data.version;const _errs34 = errors;if(!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))){validate10.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid12 = _errs34 === errors;}else {var valid12 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;}