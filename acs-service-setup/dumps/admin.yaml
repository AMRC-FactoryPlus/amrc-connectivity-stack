# Grant appropriate permissions to the Administrator group
#-REQUIRE: auth sparkplug uns
---
service: !u UUIDs.Service.ConfigDB
version: 2
objects:
  !u Auth.Class.ClientRole:
    !u ACS.Group.Administrator:
      name: "Administrator"
      subclassOf:
        - !u ACS.Group.SparkplugReader
        - !u UNS.Group.Reader
#---
## Maybe we move the Auth storage entirely into the ConfigDB. We have
## about 200 records altogether... we could hold the whole thing in
## memory, tracked from ConfigDB changes. Or we could spill to Pg or
## Redis. I'm not going this way for now in the limited time we have but
## I think it might be the way forward in future.
#
# R2Class
#   ‚äÉ Permission group
#     ùí´ Permission
#     ‚äÉ Service permission set
#     ‚äÉ Composite permission
#
# R1Class 
#   ‚äÉ Config entry group
#     ùí´ Config entry
#     ‚äÉ Application
#       ‚àã Grant
#     ‚äÉ Grant group
#       ùí´ Grant
#       ‚äÉ Permission
#
# Individual
#   ‚äÉ Config entry
#     ‚äÉ Grant
#       ‚àã Admins have full ConfigDB access
#
#service: !u UUIDs.Service.ConfigDB
#version: 2
#objects:
#  !u UUIDs.Class.App:
#    f5db0a06-ce9f-11ef-acaf-e32f612ec46b:
#      name: "Grant definition"
#  !u ConfigDB.Class.R1Class:
#    8ede8a34-cea0-11ef-8d1a-6768c15c6b2f:
#      name: "Permission grant"
#  8ede8a34-cea0-11ef-8d1a-6768c15c6b2f:
#    26dd32be-cea0-11ef-8638-4b9832bb4bc0:
#      name: "Admins have full Auth access"
#    316db19a-cea0-11ef-8c3e-d7c765a7946f:
#      name: "Admins can access Cluster Manager"
#    330473fe-cea0-11ef-a977-63ee98241d38:
#      name: "Admins can send any CMD"
#    345f24ba-cea0-11ef-8a1b-bf4371864be2:
#      name: "Admins have full ConfigDB access"
#    359e7cf4-cea0-11ef-86dd-1bb279cadc72:
#      name: "Admins have full Directory access"
#    378e11fa-cea0-11ef-a0f7-37fda7fa7e32: 
#      name: "Admins have full Git access"
#configs:
#  f5db0a06-ce9f-11ef-acaf-e32f612ec46b:
#    26dd32be-cea0-11ef-8638-4b9832bb4bc0:
#      principal: !u ACS.Group.Administrator
#      permission: !u ACS.PermGroup.Auth
#      target: !u UUIDs.Special.Null
#    316db19a-cea0-11ef-8c3e-d7c765a7946f:
#      principal: !u ACS.Group.Administrator
#      permission: !u ACS.PermGroup.Clusters
#      target: !u UUIDs.Special.Null
#    330473fe-cea0-11ef-a977-63ee98241d38:
#      principal: !u ACS.Group.Administrator
#      permission: !u ACS.PermGroup.CmdEsc
#      target: !u UUIDs.Special.Null
#    345f24ba-cea0-11ef-8a1b-bf4371864be2:
#      principal: !u ACS.Group.Administrator
#      permission: !u ACS.PermGroup.ConfigDB
#      target: !u UUIDs.Special.Null
#    359e7cf4-cea0-11ef-86dd-1bb279cadc72:
#      principal: !u ACS.Group.Administrator
#      permission: !u ACS.PermGroup.Directory
#      target: !u UUIDs.Special.Null
#    378e11fa-cea0-11ef-a0f7-37fda7fa7e32:
#      principal: !u ACS.Group.Administrator
#      permission: !u ACS.PermGroup.Git
#      target: !u UUIDs.Special.Null
---
service: !u UUIDs.Service.Authentication
version: 2
grants:
  # XXX I'm not sure these are appropriate; we are relying on the old
  # permission group expansion semantics, but these are not composite
  # permissions. For now all perm groups are expanded, but possibly
  # these should be individual grants?
  !u ACS.Group.Administrator:
    !u ACS.PermGroup.Auth: null
    !u ACS.PermGroup.Clusters: null
    !u ACS.PermGroup.CmdEsc: null
    !u ACS.PermGroup.ConfigDB: null
    !u ACS.PermGroup.Directory: null
    !u ACS.PermGroup.Git: null
    !u Files.Perm.All: null
