service: !u UUIDs.Service.ConfigDB
version: 1
classes:
  - !u UUIDs.Class.PermGroup
objects:
  !u UUIDs.Class.App:
    - !u Edge.App.ClusterStatus
    - !u Edge.App.Deployment
  !u ConfigDB.Class.R2Class:
    - !u Auth.Class.PrincipalGroup
  !u UUIDs.Class.PermGroup:
    # XXX Properly this is not a permission group, but a group of
    # groups. Since we don't have quoting for group membership grant
    # here will be much too large; the grant of ManageGroup to the edge
    # krbkeys is root-equivalent.
    - !u ACS.Group.EdgeGroups
    - !u ACS.Group.EdgePermissions
  !u Auth.Class.PrincipalGroup:
    - !u ACS.Group.CentralMonitor
configs:
  !u UUIDs.App.Info:
    !u ACS.Group.EdgeGroups:        { name: "Edge-managed groups" }
    !u ACS.Group.EdgePermissions:   { name: "Edge-managed permissions" }
    !u ACS.Group.CentralMonitor:    { name: "Central Monitors" }
    !u Edge.App.ClusterStatus:      { name: "Edge cluster status" }
    !u Edge.App.Deployment:         { name: "Edge deployment" }
---
service: !u UUIDs.Service.Authentication
version: 1
#groups:
#     These are all granted dynamically
#  !u ACS.Group.EdgeGroups
#     We currently don't need any explicit ACEs granted at the edge
#  !u ACS.Group.EdgePermissions:
groups:
  !u ACS.Group.SparkplugNode:
    - !u ACS.Group.CentralMonitor
  !u ACS.Group.GlobalDebuggers:
    - !u ACS.Group.CentralMonitor
aces:
  - principal: !u ACS.Group.CentralMonitor
    permission: !u ACS.Role.EdgeNodeConsumer
    target: !u ACS.Device.ConfigDB
  - principal: !u ACS.Group.CentralMonitor
    permission: !u UUIDs.Permission.ConfigDB.ReadConfig
    target: !u Edge.App.ClusterStatus
  - principal: !u ACS.Group.CentralMonitor
    permission: !u UUIDs.Permission.ConfigDB.ReadConfig
    target: !u UUIDs.App.SparkplugAddress
