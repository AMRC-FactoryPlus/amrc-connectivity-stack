# This dump creates a service account for the Sparkplug Ingester service
# and grants it the necessary permissions to read and write to the UNS.
# It also adds the ReadEntireUNS permission to the Warehouse role so
# that the UNS historian can use it and has permission to read the UNS.
#
# REQUIRE: auth sparkplug
---
service: !u UUIDs.Service.ConfigDB
version: 2
objects:
  !u Auth.Class.ServiceRole:
    !u UNS.Group.Sparkplug:
      name: "UNS Sparkplug ingester"
      subclassOf:
        - !u Auth.Class.CentralService
        - !u ACS.Group.SparkplugReader
        - !u UNS.Group.Ingester
    !u UNS.Group.Historian:
      name: "UNS historian"
      subclassOf:
        - !u Auth.Class.CentralService
        - !u UNS.Group.Reader

  !u Auth.Class.ClientRole:
    !u UNS.Group.Ingester:
      name: "UNS ingester"
      subclassOf:
        - !u Auth.Class.Principal
    !u UNS.Group.Reader:
      name: "UNS global reader"
      subclassOf:
        - !u Auth.Class.Principal

  !u ACS.PermGroup.MQTT:
    !u UNS.Perm.WriteToEntireUNS: { name: "Write to entire UNS" }
    !u UNS.Perm.ReadEntireUNS: { name: "Read entire UNS" }
configs:
  !u ACS.App.MQTTPermTemplate:
    !u UNS.Perm.WriteToEntireUNS:
      UNS/v1/#: w
    !u UNS.Perm.ReadEntireUNS:
      UNS/v1/#: rs
---
service: !u UUIDs.Service.Authentication
version: 2
grants:
  - principal: !u UNS.Group.Reader
    permission: !u UNS.Perm.ReadEntireUNS
    target: !u UUIDs.Special.Null
  - principal: !u UNS.Group.Ingester
    permission: !u UNS.Perm.WriteToEntireUNS
    target: !u UUIDs.Special.Null
