## Service client principals.
##
## These are the principals that services use when they are acting as a client of another
## service. These are the principals that should be granted rights.
##
## Random type principals get a random key and a Kerberos keytab. They are the most
## secure option but can only be used for services that can act as a Kerberos client.
##
## Password type principals get a random password generated by the system. This is next
## most secure.
##
## PresetPassword type principals use a password set by the administrator in the
## krb5-presets secret. This option should only be used for services that can't pull
## their password from a k8s secret, like Canary.
#
{{- if .Values.auth.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1auth
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1auth@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
{{- end }}
---
{{- if .Values.cmdesc.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1cmdesc
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1cmdesc@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
{{- end }}
---
{{- if .Values.configdb.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1configdb
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1configdb@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
{{- end }}
---
{{- if .Values.directory.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1directory
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1directory@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
{{- end }}
---
{{- if .Values.mqtt.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1mqtt
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1mqtt@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
{{- end }}
---
{{- if .Values.manager.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1manager
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1manager@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
  secret: manager-keytab/client-keytab
{{- end }}
---
{{- if .Values.historians.sparkplug.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1warehouse
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1warehouse@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
{{- end }}
---
{{- if .Values.git.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1git
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1git@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
  secret: git-keytabs/client
  account:
    class: e463b4ae-a322-46cc-8976-4ba76838e908
    name: Git repository server
    groups:
      - a461ef62-0560-4be2-8d97-1a56916ce4f8
    sparkplug:
      group: {{ .Values.acs.organisation }}-Service-Core
      node: Git
{{- end }}
---
{{- if .Values.monitor.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1monitor
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1monitor@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
  secret: monitor-keytabs/client
  account:
    class: e463b4ae-a322-46cc-8976-4ba76838e908
    name: Central Monitor
    groups:
      - 1bc3dbca-68fe-48d2-9590-3a528c111827
    sparkplug:
      group: {{ .Values.acs.organisation }}-Service-Core
      node: Monitor
{{- end }}
---
{{- if .Values.unsIngesters.sparkplug.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1sparkplugingester
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1sparkplugingester@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
  secret: uns-ingester-sparkplug-keytabs/client
  account:
    class: e463b4ae-a322-46cc-8976-4ba76838e908
    name: Sparkplug Ingester
    groups:
      - e414d355-b991-429b-8f5d-97e823ff71f5

{{- end }}
---
# In the future if we have any more ingesters then this should be
# enabled if any of the ingesters are enabled.
{{- if .Values.historians.uns.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1historianuns
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1historianuns@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
  secret: historian-uns-keytabs/client
  account:
    class: e463b4ae-a322-46cc-8976-4ba76838e908
    name: Historian UNS
    groups:
      - 03f5f08a-f61e-4134-8f66-b2951e3bbb69

{{- end }}
---
{{- if .Values.historians.unsKafka.enabled }}
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1historianunskafka
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  principal: sv1historianunskafka@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
  secret: historian-uns-kafka-keytabs/client
  account:
    class: e463b4ae-a322-46cc-8976-4ba76838e908
    name: Historian UNS (Kafka)
    groups:
      - 98b4c9cf-d283-4fe1-a33c-8bdf48fe54bc

{{- end }}
