{{ if .Values.configdb.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configdb
  namespace: {{ .Release.Namespace }}
  labels:
    component: configdb
spec:
  replicas: 1
  selector:
    matchLabels:
      component: configdb
  template:
    metadata:
      labels:
        component: configdb
        factory-plus.service: configdb
    spec:
      {{- with .Values.acs.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: krb5-conf
          configMap:
            name: krb5-conf
        # We have two logical volumes of the secret because the containers need different credentials.
        - name: krb5-keytabs-dbinit
          secret:
            secretName: krb5-keytabs
            items:
              - path: dbadmin
                key: op1pgadmin
        - name: krb5-keytabs
          secret:
            secretName: krb5-keytabs
            items:
              - path: client
                key: sv1configdb
              - path: server
                key: http.configdb
        - name: json-dumps
          configMap:
            name: configdb-json-dumps

      initContainers:
        - name: register-with-directory
{{ include "amrc-connectivity-stack.image" (list . .Values.curl) | indent 10 }}
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: krb5-passwords
                  key: admin
          command: [ 'sh', '-c', 'until curl -X PUT -o /dev/null -w "%{http_code}" -u "admin:${PASSWORD}" -H "Content-Type: application/json" --data-raw "{ \"url\": \"http://configdb.{{.Release.Namespace}}.svc.cluster.local\" }" http://directory.{{.Release.Namespace}}.svc.cluster.local/v1/service/af15f175-78a0-4e05-97c0-2a0bb82b9f3b/advertisment/36861e8d-9152-40c4-8f08-f51c2d7e3c25 | grep -E "2[0-9]{2}" > /dev/null; do sleep 10; done' ]
        - name: db-init
{{ include "amrc-connectivity-stack.image" (list . .Values.configdb) | indent 10 }}
          command: [ "/usr/bin/k5start", "-Uf", "/keytabs/dbadmin", "/usr/local/bin/psql" ]
          args: [ "-w", "-q", "-f", "/home/node/app/sql/migrate.sql" ]
          env:
            - name: KRB5_CONFIG
              value: /config/krb5-conf/krb5.conf
            - name: PGHOST
              value: postgres.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGUSER
              value: op1pgadmin
            - name: PGDATABASE
              value: postgres
            - name: SRV_DATABASE
              value: configdb
            - name: SRV_USER
              value: sv1configdb
          volumeMounts:
            - mountPath: /config/krb5-conf
              name: krb5-conf
            - mountPath: /keytabs
              name: krb5-keytabs-dbinit

        - name: load-dumps
{{ include "amrc-connectivity-stack.image" (list . .Values.configdb) | indent 10 }}
          command: [ "/usr/bin/k5start", "-Uf", "/keytabs/client" ]
          args: [ "node", "bin/load-dump.js", "/dumps" ]
          env:
            - name: KRB5_CONFIG
              value: /config/krb5-conf/krb5.conf
            - name: PGHOST
              value: postgres.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGUSER
              value: sv1configdb
            - name: PGDATABASE
              value: configdb
            - name: VERBOSE
              value: ALL
          volumeMounts:
            - mountPath: /config/krb5-conf
              name: krb5-conf
            - mountPath: /keytabs
              name: krb5-keytabs
            - mountPath: /dumps
              name: json-dumps

      containers:
        - name: webapi
{{ include "amrc-connectivity-stack.image" (list . .Values.configdb) | indent 10 }}
          command: ["/usr/bin/k5start", "-Uf", "/keytabs/client"]
          args: ["node", "bin/api.js"]
          env:
            - name: KRB5_CONFIG
              value: /config/krb5-conf/krb5.conf
            - name: CLIENT_KEYTAB
              value: /keytabs/client
            - name: SERVER_KEYTAB
              value: /keytabs/server
            # These two are used to verify Basic auth.
            - name: HOSTNAME
              value: configdb.{{ .Release.Namespace }}.svc.cluster.local
            - name: REALM
              value: {{ .Values.identity.realm | required "values.identity.realm is required!" }}
            - name: DEVICE_UUID
              value: 36861e8d-9152-40c4-8f08-f51c2d7e3c25
            - name: SPARKPLUG_ADDRESS
              value: {{ .Values.acs.organisation }}-Service-Core/Config_DB
            - name: PORT
              value: "8080"
            - name: PGHOST
              value: postgres.{{ .Release.Namespace }}.svc.cluster.local
            - name: PGUSER
              value: sv1configdb
            - name: PGDATABASE
              value: configdb
            - name: VERBOSE
              value: "1"
{{ include "amrc-connectivity-stack.cache-max-age" (list . "configdb") | indent 12 }}
            # If this is set it names a principal which overrides all ACLs. This should be turned off in production.
            - name: ROOT_PRINCIPAL
              value: admin@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
            # This is the value published via MQTT. The CDB editor does
            # not use this so publish an internal URL. This will allow
            # the Directory to be smart about what to tell clients.
            - name: HTTP_API_URL
              value: http://configdb.{{ .Release.Namespace }}.svc.cluster.local
            # This is used for service discovery so it does not need to be externally resolvable.
            - name: DIRECTORY_URL
              value: http://directory.{{ .Release.Namespace }}.svc.cluster.local

          volumeMounts:
            - mountPath: /config/krb5-conf
              name: krb5-conf
            - mountPath: /keytabs
              name: krb5-keytabs
---
apiVersion: v1
kind: Service
metadata:
  name: configdb
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: "web"
      port: 80
      targetPort: 8080
  selector:
    factory-plus.service: configdb
{{- end -}}
