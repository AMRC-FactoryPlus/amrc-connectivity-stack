{{ if .Values.files.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files
  namespace: {{ .Release.Namespace }}
  labels:
    component: files
spec:
  replicas: 1
  selector:
    matchLabels:
      component: files
  template:
    metadata:
      labels:
        component: files
        factory-plus.service: files
    spec:
      {{- with .Values.acs.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: krb5-conf
          configMap:
            name: krb5-conf
        - name: krb5-keytabs
          secret:
            secretName: files-secrets
        - name: files-storage
          persistentVolumeClaim:
            claimName: files-storage
              
      containers:
        - name: webapi
{{ include "amrc-connectivity-stack.image" (list . .Values.files) | indent 10 }}
          command: ["/usr/bin/k5start", "-Uf", "/keytabs/client"]
          args: ["node", "bin/api.js"]
          env:
            - name: KRB5_CONFIG
              value: /config/krb5-conf/krb5.conf
            - name: CLIENT_KEYTAB
              value: /keytabs/client
            - name: SERVER_KEYTAB
              value: /keytabs/server
            # These two are used to verify Basic auth.
            - name: HOSTNAME
              value: files.{{ .Release.Namespace }}.svc.cluster.local
            - name: REALM
              value: {{ .Values.identity.realm | required "values.identity.realm is required!" }}
            - name: FILES_STORAGE
              value: /data
            - name: PORT
              value: "8080"
            - name: VERBOSE
              value: "ALL"
{{ include "amrc-connectivity-stack.cache-max-age" (list . "files") | indent 12 }}
            # XXX This may not be needed? It controls parsing of JSON
            # request bodies, but the file service doesn't want to parse
            # them at all.
            - name: BODY_LIMIT
              value: "{{ .Values.files.bodyLimit }}"
            - name: ROOT_PRINCIPAL
              value: admin@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
            # This is used for service discovery so it does not need to be externally resolvable.
            - name: DIRECTORY_URL
              value: http://directory.{{ .Release.Namespace }}.svc.cluster.local

          volumeMounts:
            - mountPath: /config/krb5-conf
              name: krb5-conf
            - mountPath: /keytabs
              name: krb5-keytabs
            - mountPath: /data
              name: files-storage
---
apiVersion: v1
kind: Service
metadata:
  name: files
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: "web"
      port: 80
      targetPort: 8080
  selector:
    factory-plus.service: files
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: files-storage
  namespace: {{ .Release.Namespace }}
  labels:
    component: files
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.files.storage }}
---
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: http.files
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  secret: files-secrets/server
  principal: HTTP/files.{{ .Release.Namespace }}.svc.cluster.local@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
  additionalPrincipals:
    - HTTP/files.{{.Values.acs.baseUrl | required "values.acs.baseUrl is required"}}@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
---
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: sv1files
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  secret: files-secrets/client
  principal: sv1files@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
  account:
    class: e463b4ae-a322-46cc-8976-4ba76838e908
    name: Files Service server
    groups:
      - 1356e8b9-c953-42ac-9ffc-ae26edb88e42
{{- end -}}
