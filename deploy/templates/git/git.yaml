{{- if .Values.git.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: git
  namespace: {{ .Release.Namespace }}
  labels:
    component: git
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      component: git
  template:
    metadata:
      labels:
        component: git
        factory-plus.service: git
    spec:
      {{- with .Values.acs.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: krb5-conf
          configMap:
            name: krb5-conf
        - name: keytabs
          secret:
            secretName: git-keytabs
        - name: data
          persistentVolumeClaim:
            claimName: git-storage
        # Optional volume for git credentials
        {{- if .Values.git.credentialsSecrets }}
        - name: git-credentials
          projected:
            sources:
            {{- range .Values.git.credentialsSecrets }}
            - secret:
                name: {{ . }}
            {{- end }}
        {{- end }}

      initContainers:
        # Do as little work as possible as root... We need to chown the storage
        # as the default permissions will not be correct.
        - name: chown-storage
{{ include "amrc-connectivity-stack.image" (list . .Values.shell) | indent 10 }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Setting repo dir permissions"
              chown 1000:1000 /data
              chmod 700 /data
              ls -ld /data
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /data
              name: data

        - name: init-data
{{ include "amrc-connectivity-stack.image" (list . .Values.shell) | indent 10 }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Setting up data directory"
              if ! [ -d /data/repo ]
              then
                mkdir /data/repo
                mv /data/*-*-*-*-* /data/repo/
              fi
              rm -f /data/changed
              mkfifo /data/changed
          securityContext:
            runAsUser: 1000
          volumeMounts:
            - mountPath: /data
              name: data

      containers:
        - name: git
{{ include "amrc-connectivity-stack.image" (list . .Values.git) | indent 10 }}
          command: [ "/usr/bin/k5start", "-Uf", "/keytabs/client" ]
          args: ["node", "bin/git-server.js"]
          env:
            - name: PORT
              value: "8080"
            - name: VERBOSE
              value: {{.Values.git.verbosity | quote | required "values.git.verbosity is required!"}}
            - name: DATA_DIR
              value: /data
            - name: DATA_CHANGED_FIFO
              value: /data/changed
            - name: GIT_EXEC_PATH
              value: /usr/libexec/git-core
            - name: KRB5_CONFIG
              value: /config/krb5-conf/krb5.conf
            - name: SERVER_KEYTAB
              value: /keytabs/server
            - name: HOSTNAME
              value: git.{{ .Release.Namespace }}.svc.cluster.local
            - name: REALM
              value: {{ .Values.identity.realm | required "values.identity.realm is required!" }}
            - name: HTTP_API_URL
              value: {{ .Values.acs.secure | ternary "https" "http" }}://git.{{ .Values.acs.baseUrl }}
            - name: DIRECTORY_URL
              value: http://directory.{{ .Release.Namespace }}.svc.cluster.local
            - name: SECRETS_DIR
              value: /git-secrets
          volumeMounts:
            - mountPath: /config/krb5-conf
              name: krb5-conf
            - mountPath: /keytabs
              name: keytabs
            - mountPath: /data
              name: data
            {{- if .Values.git.credentialsSecrets }}
            - mountPath: /git-secrets
              name: git-credentials
            {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: git
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    factory-plus.service: git
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: git-storage
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    component: git
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
{{- end -}}
