{{- if .Values.opcuaServer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: acs-opcua-server
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "amrc-connectivity-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: opcua-server
spec:
  replicas: {{ .Values.opcuaServer.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "amrc-connectivity-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: opcua-server
  template:
    metadata:
      labels:
        {{- include "amrc-connectivity-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: opcua-server
    spec:
      volumes:
        - name: krb5-conf
          configMap:
            name: krb5-conf
        - name: krb5-keytabs
          secret:
            secretName: opcua-server-secrets
      containers:
        - name: opcua-server
{{ include "amrc-connectivity-stack.image" (list . .Values.opcuaServer) | indent 10 }}
          ports:
            - name: opcua
              containerPort: {{ .Values.opcuaServer.opcuaPort | default 4840 }}
              protocol: TCP
            - name: http
              containerPort: {{ .Values.opcuaServer.httpPort | default 8080 }}
              protocol: TCP
          env:
            - name: KRB5_CONFIG
              value: /config/krb5-conf/krb5.conf
            - name: CLIENT_KEYTAB
              value: /keytabs/client
            - name: SERVER_KEYTAB
              value: /keytabs/server
            - name: REALM
              value: {{ .Values.identity.realm | required "values.identity.realm is required!" }}
            - name: VERBOSE
              value: {{ .Values.opcuaServer.verbose | default "" | quote }}
            - name: DIRECTORY_URL
              value: "{{ .Values.acs.secure | ternary "https://" "http://" }}directory.{{.Values.acs.baseUrl | required "values.acs.baseUrl is required"}}"
            - name: MQTT_URL
              value: "{{ .Values.acs.secure | ternary "mqtts://" "mqtt://" }}mqtt.{{.Values.acs.baseUrl | required "values.acs.baseUrl is required"}}"
            - name: OPCUA_PORT
              value: {{ .Values.opcuaServer.port | default "4840" | quote }}
            - name: OPCUA_HOSTNAME
              value: "opc.tcp://opcua-server.{{.Values.acs.baseUrl | required "values.acs.baseUrl is required"}}"
            - name: INFLUX_URL
              value: "{{ .Values.acs.secure | ternary "https://" "http://" }}influxdb.{{.Values.acs.baseUrl | required "values.acs.baseUrl is required"}}"
            - name: INFLUX_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.opcuaServer.influx.tokenSecret | default "influxdb-auth" }}
                  key: {{ .Values.opcuaServer.influx.tokenKey | default "admin-token" }}
            - name: INFLUX_ORG
              value: {{ .Values.opcuaServer.influx.org | default "default" | quote }}
            - name: INFLUX_BUCKET
              value: {{ .Values.opcuaServer.influx.bucket | default "default" | quote }}
          volumeMounts:
            - mountPath: /keytabs
              name: krb5-keytabs
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.opcuaServer.resources | nindent 12 }}
      {{- with .Values.opcuaServer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.opcuaServer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.opcuaServer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: acs-opcua-server
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "amrc-connectivity-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: opcua-server
spec:
  type: {{ .Values.opcuaServer.service.type | default "ClusterIP" }}
  ports:
    - port: {{ .Values.opcuaServer.opcuaPort | default 4840 }}
      targetPort: opcua
      protocol: TCP
      name: opcua
    - port: {{ .Values.opcuaServer.httpPort | default 8080 }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "amrc-connectivity-stack.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: opcua-server
{{- if eq (.Values.opcuaServer.service.type | default "ClusterIP") "LoadBalancer" }}
  {{- with .Values.opcuaServer.service.loadBalancerIP }}
  loadBalancerIP: {{ . }}
  {{- end }}
  {{- with .Values.opcuaServer.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
{{- if eq (.Values.opcuaServer.service.type | default "ClusterIP") "NodePort" }}
  {{- with .Values.opcuaServer.service.nodePort }}
  nodePort: {{ . }}
  {{- end }}
{{- end }}
---
{{- if .Values.opcuaServer.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: acs-opcua-server
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "amrc-connectivity-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: opcua-server
  {{- with .Values.opcuaServer.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.opcuaServer.ingress.tls }}
  tls:
    {{- range .Values.opcuaServer.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.opcuaServer.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: acs-opcua-server
                port:
                  number: {{ .Values.opcuaServer.httpPort | default 8080 }}
          {{- end }}
    {{- end }}
{{- end }}
---
apiVersion: factoryplus.app.amrc.co.uk/v1
kind: KerberosKey
metadata:
  name: opcua.opcua-server
  namespace: {{ .Release.Namespace }}
spec:
  type: Random
  secret: opcua-server-secrets/server
  principal: OPCUA/opcua-server.{{ .Release.Namespace }}.svc.cluster.local@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
  additionalPrincipals:
    - OPCUA/opcua-server.{{.Values.acs.baseUrl | required "values.acs.baseUrl is required"}}@{{ .Values.identity.realm | required "values.identity.realm is required!" }}
{{- end -}}
