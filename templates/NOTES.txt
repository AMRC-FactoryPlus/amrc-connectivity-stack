
*****************************************************************
*** PLEASE BE PATIENT: ACS may take a few minutes to install ***
*****************************************************************

Thanks for installing the AMRC Connectivity Stack (ACS), the AMRC's open-source implementation of the Factory+ framework.

Ensure that you familiarise yourself with the components and concepts of Factory+ (factoryplus.app.amrc.co.uk) before continuing. This chart installs a full end-to-end deployment of Factory+ and there are a lot of moving parts.

ðŸ“£ Required Steps
-------------

This Chart creates a load balancer on your Kubernetes cluster that exposes all services at the subdomains listed below. If your cluster does not support LoadBalancer ingress types then you may port-forward specific services but you may need to update ConfigMap entries to point to the forwarded ports instead of using the FQDN.

You specified {{.Values.acs.baseUrl}} as your base URL. Please ensure that you have a wildcard DNS entry configured to direct all *.{{.Values.acs.baseUrl}} requests to the load balancer.

{{ if .Values.acs.secure}}
ðŸ”’ Because secure mode is enabled, you need to ensure that your cluster has a wildcard TLS certificate (type: kubernetes.io/tls) called {{.Values.acs.tlsSecretName}} in the "default" namespace on your cluster. It must have a certificate value in the `tls.crt` key and the private key value in the `tls.key` key.
{{end -}}

ðŸš€ Get Started
-------------

Get the password for the admin user by running the following command until it returns the password.

echo $(sudo kubectl get secret krb5-passwords -o jsonpath="{.data.admin}" -n {{.Release.Namespace}} | base64 --decode)

Once you have the admin password you can connect to the MQTT broker at {{ .Values.acs.secure | ternary "mqtts://" "mqtt://" }}mqtt.{{.Values.acs.baseUrl}}:{{ .Values.acs.secure | ternary "8883" "1883" }} and subscribe to spBv1.0/#. It's advisable to do this before you start adding devices to the system so that you can see all traffic.

Next, log into the manager at {{ .Values.acs.secure | ternary "https://" "http://" }}manager.{{.Values.acs.baseUrl}} as the `admin` user and create a Group, Node (Soft Gateway) and Device. Configure the device by completing the Information, Connection, and Schema tabs until you see a green VALID tag in the top right corner. Once you've configured the device you should see MQTT traffic begin to flow.

Finally, get the admin password for InfluxDB by running the following command and log into the InfluxDB instance as the admin user at {{ .Values.acs.secure | ternary "https://" "http://" }}influxdb.{{.Values.acs.baseUrl}}

echo $(sudo kubectl get secret acs-influxdb2-auth -o jsonpath="{.data.admin-password}" -n {{.Release.Namespace}} | base64 --decode)

Services
--------
Manager: {{ .Values.acs.secure | ternary "https://" "http://" }}manager.{{.Values.acs.baseUrl}}
MQTT: {{ .Values.acs.secure | ternary "mqtts://" "mqtt://" }}mqtt.{{.Values.acs.baseUrl}}:{{ .Values.acs.secure | ternary "8883" "1883" }}
InfluxDB: {{ .Values.acs.secure | ternary "https://" "http://" }}influxdb.{{.Values.acs.baseUrl}}