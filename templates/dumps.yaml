# Only run this if the ConfigMaps don't already exist
{{- if and (not (lookup "v1" "ConfigMap" .Release.Namespace "configdb-json-dumps")) (not (lookup "v1" "ConfigMap" .Release.Namespace "auth-json-dumps")) }}

# ====================================================
# Ensure that well-known UUIDs are used where required
# ----------------------------------------------------
# âš  Do not change these!
# ====================================================

{{$classDef_classDefinition := "04a1c90d-2295-4cbe-b33a-74eded62cbf1" | quote}}
{{$classDef_wildcard := "00000000-0000-0000-0000-000000000000" | quote}}
{{$classDef_application := "d319bd87-f42b-4b66-be4f-f82ff48b93f0" | quote}}
{{$classDef_serviceFunction := "265d481f-87a7-4f93-8fc6-53fa64dc11bb" | quote}}
{{$classDef_serviceAccount := "e463b4ae-a322-46cc-8976-4ba76838e908" | quote}}
{{$classDef_permission := "8ae784bb-c4b5-4995-9bf6-799b3c7f21ad" | quote}}
{{$classDef_permissionGroup := "ac0d5288-6136-4ced-a372-325fbbcdd70d" | quote}}
{{$classDef_clientRole := "1c567e3c-5519-4418-8682-6086f22fbc13" | quote}}
{{$classDef_userAccount := "8b3e8f35-78e5-4f93-bf21-7238bcb2ba9d" | quote}}
{{$classDef_userGroup := "f1fabdd1-de90-4399-b3da-ccf6c2b2c08b" | quote}}
{{$classDef_cellGateway := "00da3c0b-f62b-4761-a689-39ad0c33f864" | quote}}
{{$classDef_softGateway := "5bee4d24-32e1-44f8-b953-1f86ff4b3e87" | quote}}
{{$classDef_sparkplugDevice := "18773d6d-a70d-443a-b29a-3f1583195290" | quote}}

{{$application_objectRegistration := "cb40bed5-49ad-4443-a7f5-08c75009da8f" | quote}}
{{$application_generalObjectInformation := "64a8bfa9-7772-45c4-9d1a-9e6290690957" | quote}}
{{$application_mqttPermissionTemplate := "1266ddf1-156c-4266-9808-d6949418b185" | quote}}
{{$application_sparkplugAddressInformation := "8e32801b-f35a-4cbf-a5c3-2af64d3debd7" | quote}}
{{$application_commandEscalation := "60e99f28-67fe-4344-a6ab-b1edb8b8e810" | quote}}

{{$service_configStore := "af15f175-78a0-4e05-97c0-2a0bb82b9f3b" | quote}}
{{$service_commandEscalation := "78ea7071-24ac-4916-8351-aa3e549d8ccd" | quote}}
{{$service_directory := "af4a1d66-e6f7-43c4-8a67-0fa3be2b1cf9" | quote}}
{{$service_authorisation := "cab2642a-f7d9-42e5-8845-8f35affe1fd4" | quote}}
{{$service_mqtt := "feb27ba3-bd2c-4916-9269-79a61ebc4a47" | quote}}

{{$permission_auth_manageKerberosMappings := "327c4cc8-9c46-4e1e-bb6b-257ace37b0f6" | quote}}
{{$permission_auth_readEffectivePermissions := "35252562-51e5-4dd8-84cd-ba0fafa62669" | quote}}
{{$permission_auth_manageACLsPerPermission := "3a41f5ce-fc08-4669-9762-ec9e71061168" | quote}}
{{$permission_auth_readACLEntry := "ba566181-0e8a-405b-b16e-3fb89130fbee" | quote}}
{{$permission_auth_manageGroups := "be9b6d47-c845-49b2-b9d5-d87b83f11c3b" | quote}}
{{$permission_auth_readKerberosMapping := "e8c9c0f7-0d54-4db2-b8d6-cd80c45f6a5c" | quote}}

{{$permission_configStore_readConfigForApp := "4a339562-cd57-408d-9d1a-6529a383ea4b" | quote}}
{{$permission_configStore_writeConfigForApp := "6c799ccb-d2ad-4715-a2a7-3c8728d6c0bf" | quote}}
{{$permission_configStore_manageAppSchema := "95c7cbcb-ce60-49ed-aa81-2fe3eec4559d" | quote}}
{{$permission_configStore_manageObjects := "f0b7917b-d475-4888-9d5a-2af96b3c26b6" | quote}}
{{$permission_configStore_deleteObjects := "6957174b-7b08-45ca-ac5c-c03ab6928a6e" | quote}}

{{$permission_mqtt_subscribeReadNode := "046d6603-fa62-4208-9400-65d61f8b1ec4" | quote}}
{{$permission_mqtt_subscribeToWholeNamespace := "21000098-3a53-48da-8d3e-cc0650603d8e" | quote}}
{{$permission_mqtt_subscribeReadWholeNamespace := "81833dbb-1150-4078-b1db-978c646ba73e" | quote}}
{{$permission_mqtt_issueGlobalCommands := "50f1e694-7e18-4930-aa59-97cc90a6a1ec" | quote}}
{{$permission_mqtt_publishAllFromGroup := "64c019f8-6754-4270-8917-6659a5628b86" | quote}}
{{$permission_mqtt_subscribeReadAllStates := "8790cf3d-b793-423c-b373-8cfcf9f63529" | quote}}
{{$permission_mqtt_updateGroupState := "9a32f195-a8cc-4562-a87a-d4653279474f" | quote}}
{{$permission_mqtt_particpateAsNode := "a1314953-8226-44f4-8a3e-e87b09310579" | quote}}
{{$permission_mqtt_updateOwnState := "bdc96a3e-d6fb-48ed-b790-0aa95cf826f0" | quote}}
{{$permission_mqtt_issueGroupCommands := "cff45682-f2f0-4c72-91f3-7dda20d43509" | quote}}
{{$permission_mqtt_subscribeReadOwnGroup := "d617e37c-3908-41b1-8820-d3f8d41a4280" | quote}}
{{$permission_mqtt_representDevices := "e82456b3-a7d9-4971-9d8c-fd0be4545ab4" | quote}}
{{$permission_mqtt_readAllBirthMessages := "67dc4dd0-0939-42b1-b1f9-9049f4d91d40" | quote}}

{{$permission_directory_overrideServiceAdvertisementPermissions := "3bda2ab2-4128-463d-83c9-16b976a8d83e" | quote}}
{{$permission_directory_advertiseService := "4db4c39a-f18d-4e83-aeb0-5af2c14ddc2b" | quote}}
{{$permission_directory_manageServiceAdvertisementForOwner := "97dcf2a1-7f4b-476c-b561-e40fc42440ee" | quote}}

{{$permission_ccl_rebirth := "fbb9c25d-386d-4966-a325-f16471d9f7be" | quote}}
{{$permission_ccl_reloadEdgeAgentConfig := "6335f100-e68e-4e4d-b46d-85b42f85a036" | quote}}

{{$permissionGroup_authorisation := "50b727d4-3faa-40dc-b347-01c99a226c58" | quote}}
{{$permissionGroup_configStore := "c43c7157-a50b-4d2a-ac1a-86ff8e8e88c1" | quote}}
{{$permissionGroup_mqtt := "a637134a-d06b-41e7-ad86-4bf62fde914a" | quote}}
{{$permissionGroup_directory := "58b5da47-d098-44f7-8c1d-6e4bd800e718" | quote}}
{{$permissionGroup_commands := "9584ee09-a35a-4278-bc13-21a8be1f007c" | quote}}


{{$role_administrator := "4c09402f-9923-4c82-a6f2-02bda21aace4" | quote}}
{{$role_commandEscalation := "dbd0c099-6c59-4bc6-aa92-4ba8a9b543f4" | quote}}
{{$role_edgeNode := "87e4a5b7-9a89-4796-a216-39666a47b9d2" | quote}}
{{$role_edgeNodeConsumer := "17a64293-b82d-4db4-af4d-63359bb62934" | quote}}
{{$role_globalDebugger := "4473fe9c-05b0-42cc-ad8c-8e05f6d0ca86" | quote}}
{{$role_globalPrimaryApplication := "c0d17bcf-2a90-40e5-b244-07bf631f7417" | quote}}
{{$role_manager := "29b569d4-ab5d-40d2-b442-d556d531b25e" | quote}}
{{$role_warehouse := "6958c812-fbe2-4e6c-b997-6f850b89f679" | quote}}

{{$serviceAccount_authorisation := "1e1989ab-14e4-42bd-8171-495230acc406" | quote}}
{{$serviceAccount_commandEscalation := "23d4e8f9-76c0-49d5-addc-00b6ac05ee58" | quote}}
{{$serviceAccount_configStore := "36861e8d-9152-40c4-8f08-f51c2d7e3c25" | quote}}
{{$serviceAccount_dataWarehouse := "388ddbdc-4eb4-4ae8-bbd0-9be32f3c31e8" | quote}}
{{$serviceAccount_directory := "5cc3b068-938f-4bb2-8ceb-64338a02fbeb" | quote}}
{{$serviceAccount_manager := "2340e706-1280-420c-84a6-016547b55e95" | quote}}
{{$serviceAccount_mqtt := "2f42daeb-4521-4522-8e19-85dfb73db88e" | quote}}

# ================================================
# Generate unique UUIDs for each instance deployed
# ================================================

{{$user_admin := uuidv4 | quote}}

{{$userGroup_administrators := uuidv4 | quote}}


apiVersion: v1
kind: ConfigMap
metadata:
  name: configdb-json-dumps
  namespace: {{ .Release.Namespace }}
  labels:
    component: configdb
data:
  # Pre-seed required
  bootstrap: |
    {
      "service": {{$service_configStore}},
      "version": 1,
      "classes": [
        {{$classDef_classDefinition}},
        {{$classDef_application}},
        {{$classDef_sparkplugDevice}},
        {{$classDef_serviceFunction}},
        {{$classDef_clientRole}},
        {{$classDef_userAccount}},
        {{$classDef_userGroup}},
        {{$classDef_permission}},
        {{$classDef_permissionGroup}},
        {{$classDef_wildcard}},
        {{$classDef_serviceAccount}},
        {{$classDef_cellGateway}},
        {{$classDef_softGateway}}
      ],
      "objects": {
        {{$classDef_application}}: [
          {{$application_objectRegistration}},
          {{$application_generalObjectInformation}},
          {{$application_mqttPermissionTemplate}},
          {{$application_sparkplugAddressInformation}},
          {{$application_commandEscalation}}
        ],
        {{$classDef_serviceFunction}}: [
          {{$service_configStore}},
          {{$service_commandEscalation}},
          {{$service_directory}},
          {{$service_authorisation}},
          {{$service_mqtt}}
        ],
        {{$classDef_clientRole}}: [
          {{$role_administrator}},
          {{$role_edgeNodeConsumer}},
          {{$role_globalDebugger}},
          {{$role_edgeNode}},
          {{$role_globalPrimaryApplication}},
          {{$role_manager}},
          {{$role_commandEscalation}},
          {{$role_warehouse}}
        ],
        {{$classDef_userAccount}}: [
          {{$user_admin}}
        ],
        {{$classDef_userGroup}}: [
          {{$userGroup_administrators}}
        ],
        {{$classDef_permission}}: [
          {{$permission_auth_manageKerberosMappings}},
          {{$permission_auth_readEffectivePermissions}},
          {{$permission_auth_manageACLsPerPermission}},
          {{$permission_auth_readACLEntry}},
          {{$permission_auth_manageGroups}},
          {{$permission_configStore_readConfigForApp}},
          {{$permission_configStore_writeConfigForApp}},
          {{$permission_configStore_manageAppSchema}},
          {{$permission_configStore_manageObjects}},
          {{$permission_configStore_deleteObjects}},
          {{$permission_mqtt_subscribeReadNode}},
          {{$permission_mqtt_subscribeToWholeNamespace}},
          {{$permission_mqtt_issueGlobalCommands}},
          {{$permission_mqtt_publishAllFromGroup}},
          {{$permission_mqtt_subscribeReadWholeNamespace}},
          {{$permission_mqtt_subscribeReadAllStates}},
          {{$permission_mqtt_updateGroupState}},
          {{$permission_mqtt_particpateAsNode}},
          {{$permission_mqtt_updateOwnState}},
          {{$permission_mqtt_issueGroupCommands}},
          {{$permission_mqtt_subscribeReadOwnGroup}},
          {{$permission_mqtt_representDevices}},
          {{$permission_directory_overrideServiceAdvertisementPermissions}},
          {{$permission_directory_advertiseService}},
          {{$permission_directory_manageServiceAdvertisementForOwner}},
          {{$permission_auth_readKerberosMapping}},
          {{$permission_mqtt_readAllBirthMessages}},
          {{$permission_ccl_rebirth}},
          {{$permission_ccl_reloadEdgeAgentConfig}}
        ],
        {{$classDef_permissionGroup}}: [
          {{$permissionGroup_authorisation}},
          {{$permissionGroup_configStore}},
          {{$permissionGroup_mqtt}},
          {{$permissionGroup_directory}},
          {{$permissionGroup_commands}}
        ],
        {{$classDef_serviceAccount}}: [
          {{$serviceAccount_mqtt}},
          {{$serviceAccount_directory}},
          {{$serviceAccount_configStore}},
          {{$serviceAccount_manager}},
          {{$serviceAccount_authorisation}},
          {{$serviceAccount_commandEscalation}},
          {{$serviceAccount_dataWarehouse}}
        ],
        {{$classDef_cellGateway}}: []

      },
      "configs": {
        {{$application_generalObjectInformation}}: {
          {{$classDef_classDefinition}}: {
            "name": "Class Definition"
          },
          {{$classDef_application}}: {
            "name": "Application"
          },
          {{$classDef_sparkplugDevice}}: {
            "name": "Sparkplug Device"
          },
          {{$classDef_serviceFunction}}: {
            "name": "Service Function"
          },
          {{$application_objectRegistration}}: {
            "name": "Object Registration Application"
          },
          {{$application_generalObjectInformation}}: {
            "name": "General Object Information Application"
          },
          {{$service_configStore}}: {
            "name": "Configuration Store"
          },
          {{$classDef_clientRole}}: {
            "name": "Client Role"
          },
          {{$classDef_userAccount}}: {
            "name": "User Account"
          },
          {{$classDef_userGroup}}: {
            "name": "User Group"
          },
          {{$role_administrator}}: {
            "name": "Role: Administrator"
          },
          {{$user_admin}}: {
            "name": "Global Administrator Account"
          },
          {{$userGroup_administrators}}: {
            "name": "Administrators"
          },
          {{$classDef_permission}}: {
            "name": "Permission"
          },
          {{$classDef_permissionGroup}}: {
            "name": "Permission Group"
          },
          {{$permission_auth_manageKerberosMappings}}: {
            "name": "Auth: Manage Kerberos mappings"
          },
          {{$permission_auth_readEffectivePermissions}}: {
            "name": "Auth: Read effective permissions"
          },
          {{$permission_auth_manageACLsPerPermission}}: {
            "name": "Auth: Manage ACLs (per permission)"
          },
          {{$permission_auth_readACLEntry}}: {
            "name": "Auth: Read ACL entry"
          },
          {{$permission_auth_manageGroups}}: {
            "name": "Auth: Manage groups"
          },
          {{$permissionGroup_authorisation}}: {
            "name": "Auth permissions"
          },
          {{$classDef_wildcard}}: {
            "name": "Wildcard UUID"
          },
          {{$permission_configStore_readConfigForApp}}: {
            "name": "ConfigDB: Read config for app"
          },
          {{$permission_configStore_writeConfigForApp}}: {
            "name": "ConfigDB: Write config for app"
          },
          {{$permission_configStore_manageAppSchema}}: {
            "name": "ConfigDB: Manage application schema"
          },
          {{$permission_configStore_manageObjects}}: {
            "name": "ConfigDB: Manage objects"
          },
          {{$permission_configStore_deleteObjects}}: {
            "name": "ConfigDB: Delete objects"
          },
          {{$permissionGroup_configStore}}: {
            "name": "ConfigDB Permissions"
          },
          {{$permissionGroup_mqtt}}: {
            "name": "MQTT Permissions"
          },
          {{$application_mqttPermissionTemplate}}: {
            "name": "MQTT Permission Template Application"
          },
          {{$application_sparkplugAddressInformation}}: {
            "name": "Sparkplug Address Information Application"
          },
          {{$role_edgeNodeConsumer}}: {
            "name": "Role: Edge Node Consumer"
          },
          {{$role_globalDebugger}}: {
            "name": "Role: Global Debugger"
          },
          {{$role_edgeNode}}: {
            "name": "Role: Edge Node"
          },
          {{$role_globalPrimaryApplication}}: {
            "name": "Role: Global Primary Application"
          },
          {{$permission_mqtt_subscribeReadNode}}: {
            "name": "MQTT: Subscribe and read Node"
          },
          {{$permission_mqtt_subscribeToWholeNamespace}}: {
            "name": "MQTT: Subscribe to whole namespace"
          },
          {{$permission_mqtt_issueGlobalCommands}}: {
            "name": "MQTT: Issue global commands"
          },
          {{$permission_mqtt_publishAllFromGroup}}: {
            "name": "MQTT: Publish all from group"
          },
          {{$permission_mqtt_subscribeReadWholeNamespace}}: {
            "name": "MQTT: Subscribe and read whole namespace"
          },
          {{$permission_mqtt_subscribeReadAllStates}}: {
            "name": "MQTT: Subscribe and read all STATEs"
          },
          {{$permission_mqtt_updateGroupState}}: {
            "name": "MQTT: Update group STATE"
          },
          {{$permission_mqtt_particpateAsNode}}: {
            "name": "MQTT: Participate as Node"
          },
          {{$permission_mqtt_updateOwnState}}: {
            "name": "MQTT: Update own STATE"
          },
          {{$permission_mqtt_issueGroupCommands}}: {
            "name": "MQTT: Issue group commands"
          },
          {{$permission_mqtt_subscribeReadOwnGroup}}: {
            "name": "MQTT: Subscribe and read own group"
          },
          {{$permission_mqtt_representDevices}}: {
            "name": "MQTT: Represent Devices"
          },
          {{$classDef_serviceAccount}}: {
            "name": "Service Account"
          },
          {{$permissionGroup_directory}}: {
            "name": "Directory permissions"
          },
          {{$permission_directory_overrideServiceAdvertisementPermissions}}: {
            "name": "Directory: Override service advertisement permissions"
          },
          {{$permission_directory_advertiseService}}: {
            "name": "Directory: Advertise service"
          },
          {{$permission_directory_manageServiceAdvertisementForOwner}}: {
            "name": "Directory: Manage service advertisement for owner"
          },
          {{$permission_auth_readKerberosMapping}}: {
            "name": "Auth: Read Kerberos mapping"
          },
          {{$permission_mqtt_readAllBirthMessages}}: {
            "name": "MQTT: Read all BIRTHs"
          },
          {{$serviceAccount_mqtt}}: {
            "name": "MQTT Service"
          },
          {{$serviceAccount_directory}}: {
            "name": "Directory Service"
          },
          {{$serviceAccount_configStore}}: {
            "name": "ConfigDB Service"
          },
          {{$classDef_cellGateway}}: {
            "name": "Cell Gateway"
          },
          {{$classDef_softGateway}}: {
            "name": "Soft Gateway"
          },
          {{$serviceAccount_manager}}: {
            "name": "Manager"
          },
          {{$role_manager}}: {
            "name": "Role: Manager"
          },
          {{$application_commandEscalation}}: {
            "name": "Command Escalation Application"
          },
          {{$permission_ccl_rebirth}}: {
            "name": "CCL: Rebirth"
          },
          {{$permission_ccl_reloadEdgeAgentConfig}}: {
            "name": "CCL: Reload Edge Agent Config"
          },
          {{$service_commandEscalation}}: {
            "name": "Command Escalation Service"
          },
          {{$service_directory}}: {
            "name": "Directory Service"
          },
          {{$service_authorisation}}: {
            "name": "Authentication Service"
          },
          {{$service_mqtt}}: {
            "name": "MQTT Broker"
          },
          {{$serviceAccount_authorisation}}: {
            "name": "Auth Service"
          },
          {{$serviceAccount_commandEscalation}}: {
            "name": "Command Escalation Service"
          },
          {{$role_commandEscalation}}: {
            "name": "Role: Command Escalation Service"
          },
          {{$permissionGroup_commands}}: {
            "name": "CCL Permissions"
          },
          {{$serviceAccount_dataWarehouse}}: {
            "name": "Data Warehouse"
          },
          {{$role_warehouse}}: {
            "name": "Role: warehouse"
          }
        },
        {{$application_mqttPermissionTemplate}}: {
          {{$permission_mqtt_subscribeReadNode}}: {
            "spBv1.0/%g/NDATA/%n": "rs",
            "spBv1.0/DDEATH/%n/+": "rs",
            "spBv1.0/%g/NBIRTH/%n": "rs",
            "spBv1.0/%g/NDEATH/%n": "rs",
            "spBv1.0/%g/DDATA/%n/+": "rs",
            "spBv1.0/%g/DBIRTH/%n/+": "rs"
          },
          {{$permission_mqtt_subscribeToWholeNamespace}}: {
            "spBv1.0/#": "s"
          },
          {{$permission_mqtt_issueGlobalCommands}}: {
            "spBv1.0/+/NCMD/+": "w",
            "spBv1.0/+/DCMD/+/+": "w"
          },
          {{$permission_mqtt_publishAllFromGroup}}: {
            "spBv1.0/%g/#": "w"
          },
          {{$permission_mqtt_subscribeReadWholeNamespace}}: {
            "spBv1.0/#": "rs"
          },
          {{$permission_mqtt_subscribeReadAllStates}}: {
            "STATE/+": "rs"
          },
          {{$permission_mqtt_updateGroupState}}: {
            "STATE/%g": "w"
          },
          {{$permission_mqtt_particpateAsNode}}: {
            "spBv1.0/%g/NDATA/%n": "w",
            "spBv1.0/%g/NBIRTH/%n": "w",
            "spBv1.0/%g/NCMD/%n/#": "rs",
            "spBv1.0/%g/NDEATH/%n": "w"
          },
          {{$permission_mqtt_updateOwnState}}: {
            "STATE/%n": "w"
          },
          {{$permission_mqtt_issueGroupCommands}}: {
            "spBv1.0/%g/NCMD/+": "w",
            "spBv1.0/%g/DCMD/+/+": "w"
          },
          {{$permission_mqtt_subscribeReadOwnGroup}}: {
            "spBv1.0/%g/#": "rs"
          },
          {{$permission_mqtt_representDevices}}: {
            "spBv1.0/%g/DCMD/%n/+": "rs",
            "spBv1.0/%g/DDATA/%n/+": "w",
            "spBv1.0/%g/DBIRTH/%n/+": "w",
            "spBv1.0/%g/DDEATH/%n/+": "w"
          },
          {{$permission_mqtt_readAllBirthMessages}}: {
            "spBv1.0/+/NBIRTH/+": "rs",
            "spBv1.0/+/DBIRTH/+/+": "rs"
          }
        },
        {{$application_sparkplugAddressInformation}}: {
          {{$serviceAccount_directory}}: {
            "node_id": "Directory",
            "group_id": "{{ .Values.acs.organisation }}-Service-DIR-Directory"
          },
          {{$serviceAccount_configStore}}: {
            "node_id": "Config_DB",
            "group_id": "{{ .Values.acs.organisation }}-Service-Config_DB"
          },
          {{$serviceAccount_commandEscalation}}: {
            "node_id": "Command_Escalation",
            "group_id": "{{ .Values.acs.organisation }}-Service-Core"
          }
        },
        {{$application_commandEscalation}}: {
          {{$permission_ccl_rebirth}}: [
            {
              "name": "Node Control/Rebirth",
              "type": "Boolean"
            },
            {
              "name": "Device Control/Rebirth",
              "type": "Boolean"
            }
          ],
          {{$permission_ccl_reloadEdgeAgentConfig}}: [
            {
              "name": "Node Control/Reload Edge Agent Config",
              "type": "Boolean"
            }
          ]
        }
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-json-dumps
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "20"
  labels:
    component: auth
data:
  # Pre-seed required ACEs, Groups and Principals
  bootstrap: |
    {
      "service": {{$service_authorisation}},
      "version": 1,
      "aces": [
        {
          "principal": {{$userGroup_administrators}},
          "permission": {{$role_administrator}},
          "target": {{$classDef_wildcard}}
        },
        {
          "principal": {{$serviceAccount_directory}},
          "permission": {{$permission_mqtt_subscribeReadWholeNamespace}},
          "target": {{$classDef_wildcard}}
        },
        {
          "principal": {{$serviceAccount_directory}},
          "permission": {{$role_edgeNode}},
          "target": {{$serviceAccount_directory}}
        },
        {
          "principal": {{$serviceAccount_directory}},
          "permission": {{$permission_auth_readACLEntry}},
          "target": {{$permissionGroup_directory}}
        },
        {
          "principal": {{$serviceAccount_directory}},
          "permission": {{$permission_auth_readKerberosMapping}},
          "target": {{$classDef_wildcard}}
        },
        {
          "principal": {{$serviceAccount_mqtt}},
          "permission": {{$permission_auth_readACLEntry}},
          "target": {{$permissionGroup_mqtt}}
        },
        {
          "principal": {{$serviceAccount_mqtt}},
          "permission": {{$permission_configStore_readConfigForApp}},
          "target": {{$application_mqttPermissionTemplate}}
        },
        {
          "principal": {{$serviceAccount_mqtt}},
          "permission": {{$permission_configStore_readConfigForApp}},
          "target": {{$application_sparkplugAddressInformation}}
        },
        {
          "principal": {{$serviceAccount_configStore}},
          "permission": {{$permission_auth_readACLEntry}},
          "target": {{$permissionGroup_configStore}}
        },
        {
          "principal": {{$serviceAccount_configStore}},
          "permission": {{$role_edgeNode}},
          "target": {{$serviceAccount_configStore}}
        },
        {
          "principal": {{$serviceAccount_manager}},
          "permission": {{$role_manager}},
          "target": {{$classDef_wildcard}}
        },
        {
          "principal": {{$serviceAccount_commandEscalation}},
          "permission": {{$role_commandEscalation}},
          "target": {{$classDef_wildcard}}
        },
        {
          "principal": {{$serviceAccount_commandEscalation}},
          "permission": {{$permission_configStore_readConfigForApp}},
          "target": {{$application_commandEscalation}}
        },
        {
          "principal": {{$serviceAccount_commandEscalation}},
          "permission": {{$permission_configStore_readConfigForApp}},
          "target": {{$application_sparkplugAddressInformation}}
        },
        {
          "principal": {{$serviceAccount_commandEscalation}},
          "permission": {{$role_edgeNode}},
          "target": {{$serviceAccount_commandEscalation}}
        },
        {
          "principal": {{$serviceAccount_commandEscalation}},
          "permission": {{$permission_auth_readACLEntry}},
          "target": {{$permissionGroup_commands}}
        },
        {
          "principal": {{$serviceAccount_dataWarehouse}},
          "permission": {{$role_warehouse}},
          "target": {{$classDef_wildcard}}
        },
        {
          "principal": {{$serviceAccount_dataWarehouse}},
          "permission": {{$permission_mqtt_issueGlobalCommands}},
          "target": {{$classDef_wildcard}}
        },
        {
          "principal": {{$serviceAccount_mqtt}},
          "permission": {{$permission_directory_advertiseService}},
          "target": {{$service_mqtt}}
        }
      ],
      "groups": {
        {{$permissionGroup_directory}}: [
          {{$permission_directory_overrideServiceAdvertisementPermissions}},
          {{$permission_directory_manageServiceAdvertisementForOwner}},
          {{$permission_directory_advertiseService}}
        ],
        {{$role_administrator}}: [
          {{$role_globalDebugger}},
          {{$permissionGroup_authorisation}},
          {{$permissionGroup_configStore}}
        ],
        {{$role_edgeNodeConsumer}}: [
          {{$permission_mqtt_subscribeReadNode}}
        ],
        {{$role_warehouse}}: [
          {{$permission_mqtt_subscribeReadWholeNamespace}},
          {{$permission_ccl_rebirth}}
        ],
        {{$role_commandEscalation}}: [
          {{$permission_mqtt_issueGlobalCommands}},
          {{$permission_mqtt_subscribeReadWholeNamespace}}
        ],
        {{$role_edgeNode}}: [
          {{$permission_mqtt_subscribeReadAllStates}},
          {{$permission_mqtt_particpateAsNode}},
          {{$permission_mqtt_representDevices}}
        ],
        {{$permissionGroup_commands}}: [
          {{$permission_ccl_reloadEdgeAgentConfig}},
          {{$permission_ccl_rebirth}}
        ],
        {{$role_globalPrimaryApplication}}: [
          {{$permission_mqtt_issueGlobalCommands}},
          {{$permission_mqtt_subscribeReadWholeNamespace}},
          {{$permission_mqtt_subscribeReadAllStates}},
          {{$permission_mqtt_updateOwnState}}
        ],
        {{$role_manager}}: [
          {{$permission_auth_manageKerberosMappings}},
          {{$permission_auth_readEffectivePermissions}},
          {{$permission_auth_manageACLsPerPermission}},
          {{$permission_configStore_writeConfigForApp}},
          {{$permission_configStore_manageObjects}},
          {{$permission_ccl_reloadEdgeAgentConfig}}
        ],
        {{$permissionGroup_authorisation}}: [
          {{$permission_auth_readACLEntry}},
          {{$permission_auth_readEffectivePermissions}},
          {{$permission_auth_manageACLsPerPermission}},
          {{$permission_auth_manageGroups}},
          {{$permission_auth_manageKerberosMappings}},
          {{$permission_auth_readKerberosMapping}}
        ],
        {{$role_globalDebugger}}: [
          {{$permission_mqtt_subscribeReadWholeNamespace}}
        ],
        {{$permissionGroup_mqtt}}: [
          {{$permission_mqtt_subscribeReadNode}},
          {{$permission_mqtt_subscribeToWholeNamespace}},
          {{$permission_mqtt_issueGlobalCommands}},
          {{$permission_mqtt_publishAllFromGroup}},
          {{$permission_mqtt_subscribeReadWholeNamespace}},
          {{$permission_mqtt_subscribeReadAllStates}},
          {{$permission_mqtt_updateGroupState}},
          {{$permission_mqtt_particpateAsNode}},
          {{$permission_mqtt_updateOwnState}},
          {{$permission_mqtt_issueGroupCommands}},
          {{$permission_mqtt_subscribeReadOwnGroup}},
          {{$permission_mqtt_representDevices}},
          {{$permission_mqtt_readAllBirthMessages}}
        ],
        {{$permissionGroup_configStore}}: [
          {{$permission_configStore_readConfigForApp}},
          {{$permission_configStore_writeConfigForApp}},
          {{$permission_configStore_manageAppSchema}},
          {{$permission_configStore_manageObjects}},
          {{$permission_configStore_deleteObjects}}
        ],
        {{$userGroup_administrators}}: [
          {{$user_admin}}
        ]
      },
      "principals": [
        {
          "uuid": {{$user_admin}},
          "kerberos": "admin@{{ .Values.identity.realm }}"
        },
        {
          "uuid": {{$serviceAccount_directory}},
          "kerberos": "sv1directory@{{ .Values.identity.realm }}"
        },
        {
          "uuid": {{$serviceAccount_authorisation}},
          "kerberos": "sv1auth@{{ .Values.identity.realm }}"
        },
        {
          "uuid": {{$serviceAccount_configStore}},
          "kerberos": "sv1configdb@{{ .Values.identity.realm }}"
        },
        {
          "uuid": {{$serviceAccount_manager}},
          "kerberos": "sv1manager@{{ .Values.identity.realm }}"
        },
        {
          "uuid": {{$serviceAccount_commandEscalation}},
          "kerberos": "sv1cmdesc@{{ .Values.identity.realm }}"
        },
        {
          "uuid": {{$serviceAccount_mqtt}},
          "kerberos": "sv1mqtt@{{ .Values.identity.realm }}"
        },
        {
          "uuid": {{$serviceAccount_dataWarehouse}},
          "kerberos": "sv1warehouse@{{ .Values.identity.realm }}"
        }
      ]
    }
{{end}}